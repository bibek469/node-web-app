{{- if .Values.ports -}}
{{- if (index .Values.ports 0).containerPort -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $.Values.applicationName }}-ingress
  namespace: {{ $.Values.applicationName }}
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    {{- if $.Values.ingress }}
    {{- if $.Values.ingress.domain }}
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.ingress.certificateArn }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    external-dns.alpha.kubernetes.io/hostname: "{{ .Values.ingress.appDomain }}"
    external-dns.alpha.kubernetes.io/alias: "true"
    alb.ingress.kubernetes.io/load-balancer-attributes: routing.http.drop_invalid_header_fields.enabled=true
    {{- if $.Values.ingress.bucketName }}
    alb.ingress.kubernetes.io/load-balancer-attributes: routing.http.drop_invalid_header_fields.enabled=true,access_logs.s3.enabled=true,access_logs.s3.bucket={{ $.Values.ingress.bucketName }},access_logs.s3.prefix={{ $.Values.applicationName }}
    {{- end}}
    {{- end}}
    {{- end}}
spec:
{{- range  $index,$port := $.Values.ports }}
  rules:
  - http:
      paths:
      - path: /{{$port.path}}
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ $.Values.applicationName }}
            port: 
              number: {{ $port.containerPort}}
{{- end }}
{{- end }}
{{- end }}